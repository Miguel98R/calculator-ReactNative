{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { ThemeContext } from \"./src/context/ThemeContext\";\nimport { useState } from \"react\";\nimport { myColors } from \"./src/styles/colors\";\nimport ButtonCustom from \"./src/components/Button\";\nimport MyKeyboard from \"./src/components/MyKeyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('light'),\n    _useState2 = _slicedToArray(_useState, 2),\n    theme = _useState2[0],\n    setTheme = _useState2[1];\n  return _jsx(ThemeContext.Provider, {\n    value: theme,\n    children: _jsxs(SafeAreaView, {\n      style: theme == 'light' ? styles.container : [styles.container, {\n        backgroundColor: '#000'\n      }],\n      children: [_jsx(StatusBar, {\n        style: \"auto\"\n      }), _jsx(Switch, {\n        value: theme === 'light',\n        onValueChange: function onValueChange() {\n          return setTheme(theme === 'light' ? 'dark' : 'light');\n        }\n      }), _jsx(MyKeyboard, {})]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: myColors.white,\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Switch","SafeAreaView","ThemeContext","useState","myColors","ButtonCustom","MyKeyboard","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","theme","setTheme","Provider","value","children","style","styles","container","backgroundColor","onValueChange","create","flex","white","alignItems","justifyContent"],"sources":["/home/mike/Escritorio/MikeDev/calculator-ReactNative/App.js"],"sourcesContent":["import {StatusBar} from 'expo-status-bar';\nimport {StyleSheet, Text, View, Switch, SafeAreaView} from 'react-native';\nimport {ThemeContext} from \"./src/context/ThemeContext\";\nimport {useState} from \"react\";\nimport {myColors} from \"./src/styles/colors\";\nimport ButtonCustom from \"./src/components/Button\";\nimport MyKeyboard from \"./src/components/MyKeyboard\";\n\nexport default function App() {\n    const [theme, setTheme] = useState('light')\n    return (\n        <ThemeContext.Provider value={theme}>\n            <SafeAreaView style={theme == 'light' ? styles.container : [styles.container, {backgroundColor: '#000'}]}>\n\n                <StatusBar style=\"auto\"/>\n                <Switch\n                    value={theme === 'light'}\n                    onValueChange={() => setTheme(theme === 'light' ? 'dark' : 'light')}\n                />\n                <MyKeyboard/>\n            </SafeAreaView>\n        </ThemeContext.Provider>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: myColors.white,\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n    },\n});\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,YAAA;AAE1C,SAAQC,YAAY;AACpB,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAAQC,QAAQ;AAChB,OAAOC,YAAY;AACnB,OAAOC,UAAU;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC1B,IAAAC,SAAA,GAA0BT,QAAQ,CAAC,OAAO,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,OACIL,IAAA,CAACN,YAAY,CAACe,QAAQ;IAACC,KAAK,EAAEH,KAAM;IAAAI,QAAA,EAChCT,KAAA,CAACT,YAAY;MAACmB,KAAK,EAAEL,KAAK,IAAI,OAAO,GAAGM,MAAM,CAACC,SAAS,GAAG,CAACD,MAAM,CAACC,SAAS,EAAE;QAACC,eAAe,EAAE;MAAM,CAAC,CAAE;MAAAJ,QAAA,GAErGX,IAAA,CAACZ,SAAS;QAACwB,KAAK,EAAC;MAAM,CAAC,CAAC,EACzBZ,IAAA,CAACR,MAAM;QACHkB,KAAK,EAAEH,KAAK,KAAK,OAAQ;QACzBS,aAAa,EAAE,SAAAA,cAAA;UAAA,OAAMR,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;QAAA;MAAC,CACvE,CAAC,EACFP,IAAA,CAACF,UAAU,IAAC,CAAC;IAAA,CACH;EAAC,CACI,CAAC;AAEhC;AAEA,IAAMe,MAAM,GAAGxB,UAAU,CAAC4B,MAAM,CAAC;EAC7BH,SAAS,EAAE;IACPI,IAAI,EAAE,CAAC;IACPH,eAAe,EAAEnB,QAAQ,CAACuB,KAAK;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}